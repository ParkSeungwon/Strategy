//
//  Unit.h
//  Strategygame
//
//  Created by 승원 박 on 12. 7. 13..
//  Copyright (c) 2012년 __MyCompanyName__. All rights reserved.
//

//#include <iostream>

//#include "Terrain.h"
using namespace std;

class Unit 
{
	private:
		string unitName;
		const static int maxWayPoint = 10;
		int minimumSpeed;
		int maximumSpeed;
		WhereAbout positionInfo;
		Waypoint waypoint[maxWayPoint];
	
		CGPoint getTurnCenter(CGPoint destination);
		//CGPoint getTurnCenterByRadiusAndTheta(float r, float theta);
		float getTurnRadius(CGPoint destination);
		float getMovedAngleInRadian(CGPoint destination);
		//CGPoint getMovedPointByRadiusAndTheta(float r, float theta);
		
		int minimumTurnRadius;
		
	protected:
		static int evadeRatio;
		int fuelCapacity;
		int currentFuel;
		unsigned int experience;
		
	public:
		static unsigned int unitPrice;
		static unsigned int maxHealth;
		int currentHealth;
		
		
			
		Weapon* weaponSlot[10];
		
		
		//@property (nonatomic) int maximumAcceleration;
		unsigned int intelligenceRadius;
		
		unsigned int terrainPenaltyPercent;
		NSMutableArray *wayPoints; //CGPoint or Target Unit

		CGPoint getCurrentPosition() {return *this->currentPosition;}
		BOOL canEquip:(Weapon *)weapon;
		void moveToAtSpeed(CGPoint destination,int speed);
		//- (void) followOtherUnit:(Unit *)otherUnit;
		float calculateMovableRadiusForRadian:(float)radius;
		//- (void) calculateMovableAreaOnMap:(Map *)map;
		//- (void) addWayPoint:(CGPoint)destination atSpeed:(int)speed;
		
		Unit(string _unitName, CGPoint _position, int _headingToward);
};



unsigned int Unit::price;


class AirUnit : public Unit 
{
	terrainPenaltyPercent = 0;
	AirUnit(string _unitName, CGPoint _currentPosition) : Unit(_unitName, _currentPosition);
};

class ArmorUnit : public Unit 
{

};

class InfantryUnit : public Unit 
{

};

class ShipUnit : public Unit 
{

};

